meta:
  zones:
    z1: (( properties.template_only.aws.availability_zone ))
    z2: (( properties.template_only.aws.availability_zone2 ))

  elbs: (( merge ))

  fog_config:
    provider: AWS
    aws_access_key_id: (( properties.template_only.aws.access_key_id ))
    aws_secret_access_key: (( properties.template_only.aws.secret_access_key ))
    region: (( properties.template_only.aws.region ))

  stemcell: (( merge || .meta.default_stemcell ))

  default_stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: 3147
  aws:
    key_name: ~

properties:
  <<: (( merge ))
  template_only: (( merge ))

  logger_endpoint:
    port: 4443

  loggregator:
    blacklisted_syslog_ranges:
    - start: 10.9.0.0
      end: 10.9.255.255

  cc:
    resource_pool:
      blobstore_type: fog
      fog_connection: (( meta.fog_config ))
      encryption: AES256
    packages:
      blobstore_type: fog
      fog_connection: (( meta.fog_config ))
      encryption: AES256
    droplets:
      blobstore_type: fog
      fog_connection: (( meta.fog_config ))
      encryption: AES256
    buildpacks:
      blobstore_type: fog
      fog_connection: (( meta.fog_config ))
      encryption: AES256

  uaa:
    port: 8081

  dea_next:
    deny_networks:
      - 169.254.0.0/16 # AWS Status
      - 10.9.1.0/16
    allow_networks: (( merge || ["10.9.1.2/32","10.9.2.2/32", "10.9.3.0/24", "10.9.4.0/24"] )) # Amazon DNS and services

compilation:
  cloud_properties:
    instance_type: c3.large
    availability_zone: (( meta.zones.z1 ))
    ephemeral_disk:
       size: 30000
       type: gp2
       encrypted: true

networks: (( merge ))

resource_pools:
  - name: small_z1
    cloud_properties:
      instance_type: t2.small
      ephemeral_disk:
        size: 30_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z1 ))
      key_name: (( meta.aws.key_name ))

  - name: small_z2
    cloud_properties:
      instance_type: t2.small
      ephemeral_disk:
        size: 30_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z2 ))
      key_name: (( meta.aws.key_name ))

  - name: medium_z1
    cloud_properties:
      instance_type: t2.medium
      ephemeral_disk:
        size: 30_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z1 ))
      key_name: (( meta.aws.key_name ))

  - name: medium_z2
    cloud_properties:
      instance_type: t2.medium
      ephemeral_disk:
        size: 30_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z2 ))
      key_name: (( meta.aws.key_name ))

  - name: large_z1
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 30_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z1 ))
      key_name: (( meta.aws.key_name ))

  - name: large_z2
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 30_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z2 ))
      key_name: (( meta.aws.key_name ))

  - name: runner_z1
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 65_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z1 ))
      key_name: (( meta.aws.key_name ))

  - name: runner_z2
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 65_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z2 ))
      key_name: (( meta.aws.key_name ))

  - name: router_z1
    cloud_properties:
      instance_type: t2.medium
      ephemeral_disk:
        size: 65_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z1 ))
      elbs: (( merge || meta.elbs ))
      key_name: (( meta.aws.key_name ))

  - name: router_z2
    cloud_properties:
      instance_type: t2.medium
      ephemeral_disk:
        size: 65_000
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z2 ))
      elbs: (( merge || meta.elbs ))
      key_name: (( meta.aws.key_name ))

  - name: small_errand
    cloud_properties:
      instance_type: t2.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
        encrypted: true
      availability_zone: (( meta.zones.z1 ))
      key_name: (( meta.aws.key_name ))

  - name: xlarge_errand
    cloud_properties:
      instance_type: c3.xlarge
      availability_zone: (( meta.zones.z1 ))
      key_name: (( meta.aws.key_name ))

# set up static IPs
jobs:
  - name: logs_z1
    instances: 0
    networks:
      - name: cf1
        static_ips: (( static_ips(0) ))

  - name: logs_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(0) ))

  - name: nats_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(1) ))

  - name: nats_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(1) ))

  - name: uaa_z2
    instances: 0

  - name: api_z1
    instances: 1

  - name: api_z2
    instances: 0

  - name: api_worker_z1
    instances: 1

  - name: api_worker_z2
    instances: 0

  - name: router_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(5, 6, 15, 16, 17, 18, 19, 20) ))

  - name: router_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(5, 6, 15, 16, 17, 18, 19, 20) ))

  - name: hm9000_z2
    instances: 0

  - name: runner_z1
    instances: 1

  - name: runner_z2
    instances: 0

  - name: loggregator_z1
    instances: 0
    networks:
      - name: cf1

  - name: loggregator_z2
    instances: 0
    networks:
      - name: cf2

  - name: doppler_z1
    instances: 1
    networks:
      - name: cf1

  - name: doppler_z2
    instances: 0
    networks:
      - name: cf2

  - name: loggregator_trafficcontroller_z1
    instances: 1
    networks:
      - name: cf1

  - name: loggregator_trafficcontroller_z2
    instances: 0
    networks:
      - name: cf2

  - name: consul_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(27, 28, 29) ))

  - name: consul_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(27, 28, 29) ))

  - name: etcd_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(10, 25) ))

  - name: etcd_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(9) ))

  - name: acceptance_tests
    instances: 1

  - name: smoke_tests
    instances: 1
